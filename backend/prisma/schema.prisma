// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  role Role @default(USER)
  email String @unique()
  phone String   @unique()
  password String
  name String
  avatar String @default("https://www.pngkey.com/png/detail/115-1150152_default-profile-picture-avatar-png-green.png")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  receivedMessage Message[] @relation(name: "receivedMessage")
  sentMessage Message[] @relation(name: "sentMessage")
  currentUserMessageSection MessageSection[] @relation(name: "currentUserMessageSection")
  otherUserMessageSection MessageSection[] @relation(name: "otherUserMessageSection")
  @@index(id)
}

model Message {
  id Int @id @default(autoincrement())
  text String
  fromId Int
  from User @relation(name: "sentMessage", fields: [fromId], references: [id])
  toId Int
  to User @relation(name: "receivedMessage", fields: [toId], references: [id])
  createdAt DateTime @default(now())
  latestMessageForSection MessageSection?
  @@index([id, fromId, toId, createdAt])
}

model MessageSection {
  id Int @id @default(autoincrement())
  currentUserId Int
  currentUser User @relation(name: "currentUserMessageSection", fields: [currentUserId], references: [id])
  otherUser User @relation(name: "otherUserMessageSection", fields: [otherUserId], references: [id])
  otherUserId Int 
  latestMessageId Int @unique
  latestMessage Message @relation(fields: [latestMessageId], references: [id])
}

enum Role {
  ADMIN
  USER
}